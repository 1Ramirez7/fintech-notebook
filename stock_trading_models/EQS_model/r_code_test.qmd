---
title: "test"
format: html
---






I'm trying to see if I can get sector information for stocks using tidyquant and or yfinance. I was able to do this in the python_test.qmd file.



The following is doing the code for each option in the sector column to save time

```{r}
# Load libraries and read file
library(readxl)
library(openxlsx)
library(dplyr)

df <- read_excel("C:/Users/eduar/Downloads/papersample.xlsx")

# -------------------------------------------------
# 1.  Clean data (remove blanks / zeros)
# -------------------------------------------------
df_clean <- df %>% 
  filter(
    PE  != 0 & PE  != "" & !is.na(PE),
    BVPS != 0 & BVPS != "" & !is.na(BVPS)
  )

# -------------------------------------------------
# 2.  Parameters for ranking
# -------------------------------------------------
variables  <- c("BVPS", "PE")            # metrics to rank
weights    <- c(0.5, 0.5)                   # weights for each metric
directions <- c("high",  "low")             # "low" = smaller is better

# -------------------------------------------------
# 3.  Rank *within every sector* and build NormRank
# -------------------------------------------------
ranked <- df_clean %>% 
  group_by(sector) %>% 
  mutate(
    RankBVPS = if (directions[1] == "low") rank(-BVPS, ties.method = "min")
                else                         rank( BVPS, ties.method = "min"),
    RankPE  = if (directions[2] == "low") rank(-PE,  ties.method = "min")
                else                         rank( PE,  ties.method = "min"),
    NormRank  = (RankBVPS / n()) * weights[1] +
                (RankPE  / n()) * weights[2]
  ) %>% 
  ungroup() %>% 
  select(stock_id, NormRank)

# -------------------------------------------------
# 4.  Join NormRank back to the master table
# -------------------------------------------------
df_final <- df %>% 
  select(-any_of("NormRank")) %>%          # drop temp col so join adds clean NormRank
  left_join(ranked, by = "stock_id") %>% 
  mutate(value = ifelse(!is.na(NormRank), NormRank, value)) |> # mutate(target_coulmn....
  select(-NormRank)

write.xlsx(df_final,
           file = "C:/Users/eduar/Downloads/papersample.xlsx",
           overwrite = TRUE)

```

